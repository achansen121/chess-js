 @vtotal:1; @vsize:.9; @pawnratio:.9; @vmargin: ( @vtotal - @vsize ) / 2; @pawnmargin: ( @vtotal - @pawnratio * @vsize ) / 2; @board_dim:750px; @recent_move_size:0px; @select_pct: -0.02; .move_history{ h6{ font-size: 120%; margin: 0; margin-bottom: .5em; font-weight: normal; } >div{ height: 20em; overflow-y: scroll; min-width: 10em; border: 1px solid black; padding: .5em; font-family: monospace; } font-family: sans-serif; display: inline-block; margin: 1em; vertical-align: top; } .chessboard{ width: @board_dim; height: @board_dim; position: relative; display: inline-block; >.bsquare.odd{ background: rgba(255,128,55,1 ) ; } >.bsquare.even{ background: rgba(255,255,200,1); } >.bsquare{ width: percentage(1/8); height: percentage(1/8); position: absolute; } >.recent_move,>.recent_source{ >div{ border: 5px solid green; position: absolute; top:0; bottom: 0; left:0; right: 0; } width: ( @board_dim / 8 ) - ( @recent_move_size * 2 ); height: ( @board_dim / 8 ) - ( @recent_move_size * 2 ); position: absolute; } >.recent_source>div{ border-color: rgb(0, 255, 0); } >svg{ position: absolute; z-index: 1; width: percentage(1/8*.9); height: percentage(1/8*.9); } svg { path, circle, rect { fill: white; stroke: black; } } svg.black { path, circle, rect { fill: black; stroke: white; } } >button{ position: absolute; z-index: 2; cursor: pointer; padding: 0; background: none; border: none; width: percentage( 1 / 8 ); height: percentage( 1 / 8 ); } >button.selectedbutton>div{ position: absolute; top: 10%; bottom: 10%; left: 10%; right: 10%; border: 3px solid black; border-radius: 50%; } >button.selectedbutton.nil{ border: 3px solid black; width: percentage( 1 / 8 ); height: percentage( 1 / 8 ); z-index: 3; } >button.selectedbutton.nil:focus{ border-width: 6px; outline: 0; } >button.selectedbutton.nil.invalidmove{ border-color: red; } button:focus, div[role="button"]:focus{ outline: 0; } .promotion{ width: 50%; position: absolute; background: white; top:percentage(75 / 100 / 2); left: 25%; border-radius: 5px; border: 1px solid black; z-index: -5; padding: 1em; font-family: sans-serif; svg{ height: 3em; } .promotray{ text-align: center; } div[role="button"]{ vertical-align: middle; cursor: pointer; display: inline-block; margin: 1em; border: 1px solid rgba(255, 255, 255, 0); border-radius: 5px; } div[role="button"]:hover{ border-color: black; } } } .looptwo(@counterx,@countery) when (@countery > 0) { .chessboard{ >button[data-coord="@{counterx}x@{countery}"], >button.selectedbutton[data-coord="@{counterx}x@{countery}"], >.bsquare[data-coord="@{counterx}x@{countery}"], >.recent_move[data-coord="@{counterx}x@{countery}"], >.recent_source[data-coord="@{counterx}x@{countery}"] { left:percentage( ( ( @counterx - 1) * ( 1 / 8 ) ) ); top:percentage( ( ( @countery - 1) * ( 1 / 8 ) ) ); } >svg[data-coord="@{counterx}x@{countery}"]{ left:percentage( ( ( @counterx - 1 + @vmargin ) * ( 1 / 8 ) ) ); top:percentage( ( ( @countery - 1 + @vmargin ) * ( 1 / 8 ) ) ); } } .looptwo(@counterx,@countery - 1); } .loopone(@counterx) when (@counterx > 0) { .loopone( @counterx - 1 ); .looptwo( @counterx , 8 ); } .loopone(8); 